[{"/home/kikai/Documents/workspace/school-management/client/src/index.js":"1","/home/kikai/Documents/workspace/school-management/client/src/app.component.jsx":"2","/home/kikai/Documents/workspace/school-management/client/src/components/AuthRoute/AuthRoute.jsx":"3","/home/kikai/Documents/workspace/school-management/client/src/components/SignInPage/SignInPage.jsx":"4","/home/kikai/Documents/workspace/school-management/client/src/reducers/index.js":"5","/home/kikai/Documents/workspace/school-management/client/src/reducers/auth.js":"6","/home/kikai/Documents/workspace/school-management/client/src/utils/constants.js":"7","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/authActionCreator.js":"8","/home/kikai/Documents/workspace/school-management/client/src/components/NavigationBar/NavigationBar.jsx":"9","/home/kikai/Documents/workspace/school-management/client/src/utils/api.js":"10","/home/kikai/Documents/workspace/school-management/client/src/actions/auth.js":"11","/home/kikai/Documents/workspace/school-management/client/src/utils/authedHeader.js":"12","/home/kikai/Documents/workspace/school-management/client/src/reducers/userList.js":"13","/home/kikai/Documents/workspace/school-management/client/src/components/UserListPage/UserListPage.jsx":"14","/home/kikai/Documents/workspace/school-management/client/src/components/ClassListPage/ClassListPage.jsx":"15","/home/kikai/Documents/workspace/school-management/client/src/components/RoomListPage/RoomListPage.jsx":"16","/home/kikai/Documents/workspace/school-management/client/src/components/UserDetailPage/UserDetailPage.jsx":"17","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/userListActionCreator.js":"18","/home/kikai/Documents/workspace/school-management/client/src/actions/userList.js":"19","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/roomListActionCreator.js":"20","/home/kikai/Documents/workspace/school-management/client/src/actions/roomList.js":"21","/home/kikai/Documents/workspace/school-management/client/src/reducers/roomList.js":"22","/home/kikai/Documents/workspace/school-management/client/src/reducers/classList.js":"23","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/classListActionCreator.js":"24","/home/kikai/Documents/workspace/school-management/client/src/actions/classList.js":"25","/home/kikai/Documents/workspace/school-management/client/src/components/TeacherClassListPage/TeacherClassListPage.jsx":"26","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/teacherClassListActionCreator.js":"27","/home/kikai/Documents/workspace/school-management/client/src/reducers/teacherClassList.js":"28","/home/kikai/Documents/workspace/school-management/client/src/actions/teacherClassList.js":"29","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/userDetailActionCreator.js":"30","/home/kikai/Documents/workspace/school-management/client/src/actions/userDetail.js":"31","/home/kikai/Documents/workspace/school-management/client/src/reducers/userDetail.js":"32","/home/kikai/Documents/workspace/school-management/client/src/utils/history.js":"33"},{"size":177,"mtime":1608742080089,"results":"34","hashOfConfig":"35"},{"size":2091,"mtime":1608978156652,"results":"36","hashOfConfig":"35"},{"size":730,"mtime":1608957946805,"results":"37","hashOfConfig":"35"},{"size":3263,"mtime":1608976806263,"results":"38","hashOfConfig":"35"},{"size":423,"mtime":1608965838050,"results":"39","hashOfConfig":"35"},{"size":2360,"mtime":1608778013659,"results":"40","hashOfConfig":"35"},{"size":3175,"mtime":1608973893713,"results":"41","hashOfConfig":"35"},{"size":1169,"mtime":1608978737035,"results":"42","hashOfConfig":"35"},{"size":2421,"mtime":1608979265457,"results":"43","hashOfConfig":"35"},{"size":4378,"mtime":1608966470455,"results":"44","hashOfConfig":"35"},{"size":1098,"mtime":1608888323650,"results":"45","hashOfConfig":"35"},{"size":355,"mtime":1608818749727,"results":"46","hashOfConfig":"35"},{"size":1603,"mtime":1608971529851,"results":"47","hashOfConfig":"35"},{"size":8255,"mtime":1608976346710,"results":"48","hashOfConfig":"35"},{"size":9142,"mtime":1608979496089,"results":"49","hashOfConfig":"35"},{"size":6487,"mtime":1608976366070,"results":"50","hashOfConfig":"35"},{"size":5724,"mtime":1608979212306,"results":"51","hashOfConfig":"35"},{"size":1905,"mtime":1608978791354,"results":"52","hashOfConfig":"35"},{"size":1290,"mtime":1608968543074,"results":"53","hashOfConfig":"35"},{"size":1892,"mtime":1608975045934,"results":"54","hashOfConfig":"35"},{"size":1289,"mtime":1608973955176,"results":"55","hashOfConfig":"35"},{"size":1664,"mtime":1608973869946,"results":"56","hashOfConfig":"35"},{"size":1688,"mtime":1608974436298,"results":"57","hashOfConfig":"35"},{"size":1941,"mtime":1608972683400,"results":"58","hashOfConfig":"35"},{"size":1322,"mtime":1608971944126,"results":"59","hashOfConfig":"35"},{"size":3928,"mtime":1608979080881,"results":"60","hashOfConfig":"35"},{"size":539,"mtime":1608967259366,"results":"61","hashOfConfig":"35"},{"size":687,"mtime":1608918797127,"results":"62","hashOfConfig":"35"},{"size":451,"mtime":1608919081823,"results":"63","hashOfConfig":"35"},{"size":722,"mtime":1608978786982,"results":"64","hashOfConfig":"35"},{"size":412,"mtime":1608923392517,"results":"65","hashOfConfig":"35"},{"size":713,"mtime":1608968046202,"results":"66","hashOfConfig":"35"},{"size":87,"mtime":1608978139100,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"1hu5fjj",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"70"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"70"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"70"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"150"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"153","usedDeprecatedRules":"70"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"/home/kikai/Documents/workspace/school-management/client/src/index.js",[],["156","157"],"/home/kikai/Documents/workspace/school-management/client/src/app.component.jsx",["158"],"import React from 'react';\nimport { Route, Redirect, Switch, Router } from 'react-router-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport appReducers from './reducers';\nimport AuthenticatedRoute from './components/AuthRoute/AuthRoute';\nimport SignInPage from './components/SignInPage/SignInPage';\nimport UserListPage from './components/UserListPage/UserListPage';\nimport ClassListPage from './components/ClassListPage/ClassListPage';\nimport RoomListPage from './components/RoomListPage/RoomListPage';\nimport UserDetailPage from './components/UserDetailPage/UserDetailPage';\nimport TeacherClassListPage from './components/TeacherClassListPage/TeacherClassListPage';\nimport history from './utils/history';\n\nexport default () => {\n  const middlewares = [thunkMiddleware];\n\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'development') {\n    const loggerMiddleware = createLogger();\n    middlewares.push(loggerMiddleware);\n  }\n\n  const store = createStore(appReducers, composeWithDevTools(applyMiddleware(...middlewares)));\n\n  return (\n    <Provider store={store}>\n      <Router history={history} forceRefresh={true}>\n        <Switch>\n          <Route exact path=\"/\" render={() => (<Redirect to=\"/users\" />)} />\n          <Route path=\"/signin\" render={() => {\n            if (localStorage.getItem('token'))\n              return <Redirect to=\"/classes\" />\n            else \n              return <SignInPage/>\n          }} />\n          <AuthenticatedRoute path=\"/users\" component={UserListPage} />\n          <AuthenticatedRoute path=\"/classes\" component={ClassListPage} />\n          <AuthenticatedRoute path=\"/rooms\" component={RoomListPage} />\n          <AuthenticatedRoute path=\"/me\" component={UserDetailPage} />\n          <AuthenticatedRoute path=\"/all-classess\" component={TeacherClassListPage} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};","/home/kikai/Documents/workspace/school-management/client/src/components/AuthRoute/AuthRoute.jsx",[],"/home/kikai/Documents/workspace/school-management/client/src/components/SignInPage/SignInPage.jsx",["159"],"import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { Grid, Col, Row, Panel, ButtonToolbar, Button, FormGroup, ControlLabel, FormControl, Alert } from 'react-bootstrap';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport * as authActionCreator from '../../actionCreators/authActionCreator';\n\nexport class SignInComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n  }\n\n  login() {\n    this.props.login(this.state.username, this.state.password);\n  }\n\n  render() {\n    const { error, message } = this.props;\n\n    let notification = '';\n    if (error) {\n      notification = (<Alert bsStyle=\"danger\"><p>{error}</p></Alert>);\n    } else if (message) {\n      notification = (<Alert bsStyle=\"info\"><p>{message}</p></Alert>);\n    }\n\n    return (\n      <Grid>\n        <Row>\n          <Col>\n            <NavigationBar />\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6} md={6} xsOffset={3} style={{ marginTop: '100px' }}>\n            <Panel bsStyle=\"primary\">\n              <Panel.Heading>\n                <Panel.Title componentClass=\"h3\">Sign In</Panel.Title>\n              </Panel.Heading>\n              <Panel.Body>\n                <form>\n                  <FormGroup controlId=\"username\">\n                    <ControlLabel>Username</ControlLabel>\n                    <FormControl type=\"email\" ref=\"username\" label=\"Username\" placeholder=\"Username\" onChange={this.handleChange} />\n                  </FormGroup>\n                  <FormGroup controlId=\"password\">\n                    <ControlLabel>Password</ControlLabel>\n                    <FormControl type=\"password\" ref=\"password\" label=\"Password\" placeholder=\"Password\" onChange={this.handleChange} />\n                  </FormGroup>\n                </form>\n                {notification}\n                <ButtonToolbar>\n                  <Button bsStyle=\"primary\" onClick={() => this.login()}>Login</Button>\n                </ButtonToolbar>\n              </Panel.Body>\n            </Panel>\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nSignInComponent.propTypes = {\n  login: PropTypes.func.isRequired,\n  clearNotification: PropTypes.func,\n  history: PropTypes.object,\n  message: PropTypes.string,\n  error: PropTypes.string\n};\n\nSignInComponent.defaultProps = {\n  clearNotification: () => {},\n  message: '',\n  error: '',\n  history: null\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pageStatus: state.auth.pageStatus,\n    message: state.auth.message,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    login: authActionCreator.login,\n    clearNotification: authActionCreator.clearNotification\n  }, dispatch);\n};\n\nconst SignInPage = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignInComponent));\n\nexport default SignInPage;\n\n","/home/kikai/Documents/workspace/school-management/client/src/reducers/index.js",[],"/home/kikai/Documents/workspace/school-management/client/src/reducers/auth.js",["160"],"import {\n  LOG_IN,\n  LOG_IN_SUCCESS,\n  LOG_IN_FAIL,\n  GET_USER,\n  GET_USER_SUCCESS,\n  GET_USER_FAIL,\n  LOG_OUT,\n  LOG_OUT_SUCCESS,\n  LOG_OUT_FAIL,\n  CLEAR_NOTIFICATION\n} from '../utils/constants';\n\nexport default (state = Object.assign({}), action) => {\n  switch (action.type) {\n    case (LOG_IN):\n      return Object.assign({}, state, {\n        pageStatus: LOG_IN,\n        message: null,\n        error: null,\n        prevPageStatus: state.pageStatus\n      });\n    case (LOG_IN_SUCCESS):\n      return Object.assign({}, state, {\n        pageStatus: LOG_IN_SUCCESS,\n        error: null,\n        prevPageStatus: state.pageStatus,\n        username: action.username,\n        isAdmin: action.isAdmin\n      });\n    case (LOG_IN_FAIL):\n      return Object.assign({}, state, {\n        pageStatus: LOG_IN_FAIL,\n        message: null,\n        error: action.data,\n        prevPageStatus: state.pageStatus\n      });\n    case (GET_USER):\n      return Object.assign({}, state, {\n        pageStatus: GET_USER,\n        message: null,\n        error: null,\n        prevPageStatus: state.pageStatus\n      });\n    case (GET_USER_SUCCESS):\n      return Object.assign({}, state, {\n        pageStatus: GET_USER,\n        message: null,\n        error: null,\n        prevPageStatus: state.pageStatus,\n        user: action.data\n      });\n    case (GET_USER_FAIL):\n      return Object.assign({}, state, {\n        pageStatus: GET_USER,\n        message: null,\n        error: action.data,\n        prevPageStatus: state.pageStatus\n      });\n    case (LOG_OUT):\n      return Object.assign({}, state, {\n        pageStatus: LOG_OUT,\n        message: null,\n        error: null,\n        prevPageStatus: state.pageStatus\n      });\n    case (LOG_OUT_SUCCESS):\n      return Object.assign({}, state, {\n        pageStatus: LOG_OUT_SUCCESS,\n        message: action.data,\n        user: null,\n        error: null,\n        prevPageStatus: state.pageStatus\n      });\n    case (LOG_OUT_FAIL):\n      return Object.assign({}, state, {\n        pageStatus: LOG_OUT_FAIL,\n        message: null,\n        error: action.data,\n        prevPageStatus: state.pageStatus\n      });\n    case (CLEAR_NOTIFICATION):\n      return Object.assign({}, state, {\n        pageStatus: LOG_OUT_FAIL,\n        message: null,\n        error: null,\n        prevPageStatus: state.pageStatus\n      });\n    default:\n      return state;\n  }\n};\n","/home/kikai/Documents/workspace/school-management/client/src/utils/constants.js",[],"/home/kikai/Documents/workspace/school-management/client/src/actionCreators/authActionCreator.js",[],"/home/kikai/Documents/workspace/school-management/client/src/components/NavigationBar/NavigationBar.jsx",["161","162"],"import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { Navbar, Nav, NavDropdown, MenuItem } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as authActionCreator from '../../actionCreators/authActionCreator';\n\nexport class NavigationBarComponent extends Component {\n  render() {\n    let dropDown = null;\n    if (this.props.user && this.props.user.username) {\n      dropDown = (\n        <Nav pullRight>\n          <Navbar.Brand onClick={(this.props.logout)}>\n            <a href=\"/me\">{this.props.user.username}</a>\n          </Navbar.Brand>\n          <Navbar.Brand style={{ cursor: 'pointer', fontSize: '17px' }} onClick={() => {\n            localStorage.removeItem('token')\n            return this.props.logout();\n            }}>\n            Logout\n          </Navbar.Brand>\n        </Nav>);\n    }\n\n    return (\n      <Navbar>\n        <Navbar.Header>\n          <Navbar.Brand><p style={{ margin: '0 50px 0 0' }}>SCHOOL MANAGEMENT</p></Navbar.Brand>\n          {this.props.user?.isAdmin && <Navbar.Brand>\n              <a href=\"/users\">Users</a>\n            </Navbar.Brand>\n          }\n          {this.props.user?.isAdmin && <Navbar.Brand>\n              <a href=\"/classes\">Classes</a>\n            </Navbar.Brand>\n          }\n          {this.props.user?.isAdmin && <Navbar.Brand>\n              <a href=\"/rooms\">Rooms</a>\n            </Navbar.Brand>\n          }\n          {this.props.user?.isAdmin === false && <Navbar.Brand>\n              <a href=\"/all-classess\">Classes</a>\n            </Navbar.Brand>\n          }\n        </Navbar.Header>\n        {dropDown}\n      </Navbar>\n    );\n  }\n}\n\nNavigationBarComponent.propTypes = {\n  logout: PropTypes.func,\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    email: PropTypes.string\n  })\n};\n\nNavigationBarComponent.defaultProps = {\n  logout: () => { },\n  user: {}\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.auth.user,\n    pageStatus: state.auth.pageStatus,\n    message: state.auth.message,\n    error: state.auth.error\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    logout: authActionCreator.logout\n  }, dispatch);\n};\n\nconst NavigationBar = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NavigationBarComponent));\n\nexport default NavigationBar;\n\n","/home/kikai/Documents/workspace/school-management/client/src/utils/api.js",["163","164","165"],"import qs from 'qs';\nimport { BASE_URL, SIGNIN_ENDPOINT, USER_INFO_ENDPOINT, DASHBOARD_ENDPOINT, USERS_ENDPOINT, ROOMS_ENDPOINT,CLASSES_ENDPOINT } from './constants';\nimport { authHeader } from './authedHeader'\n\nconst login = (username, password) => {\n  const options = {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n    },\n    body: JSON.stringify({\n      \"username\": username,\n      \"password\": password\n    })\n  };\n  return fetch(BASE_URL + SIGNIN_ENDPOINT, options)\n    .then(res => res.json());\n};\n\nconst logout = () => {\n  localStorage.removeItem('user');\n  return Promise.resolve()\n};\n\nconst getUserInfo = () => {\n  const options = {\n    method: 'get',\n    headers: authHeader()\n  };\n  return fetch(BASE_URL + USER_INFO_ENDPOINT, options)\n    .then(res => res.json());\n};\n\n//user\nconst getUserList = () => {\n  const options = {\n    method: 'get',\n    headers: authHeader()\n  };\n  return fetch(BASE_URL + USERS_ENDPOINT, options)\n    .then(res => res.json());\n};\n\nconst editUser = (userId, user) => {\n  const options = {\n    method: 'put',\n    headers: authHeader(),\n    body: JSON.stringify(user)\n  };\n  return fetch(BASE_URL + USERS_ENDPOINT + `/${userId}`, options)\n    .then(res => res.json());\n};\n\nconst createNewUser = (user) => {\n  const options = {\n    method: 'post',\n    headers: authHeader(),\n    body: JSON.stringify(user)\n  };\n  return fetch(BASE_URL + USERS_ENDPOINT , options)\n    .then(res => res.json());\n};\n\nconst deleteUser = (userId) => {\n  const options = {\n    method: 'delete',\n    headers: authHeader()\n  };\n  return fetch(BASE_URL + USERS_ENDPOINT  + `/${userId}`, options)\n    .then(res => res);\n};\n\n//room\nconst getRoomList = () => {\n  const options = {\n    method: 'get',\n    headers: authHeader()\n  };\n  return fetch(BASE_URL + ROOMS_ENDPOINT, options)\n    .then(res => res.json());\n};\n\nconst editRoom = (roomId, room) => {\n  const options = {\n    method: 'put',\n    headers: authHeader(),\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + ROOMS_ENDPOINT + `/${roomId}`, options)\n    .then(res => res.json());\n};\n\nconst createNewRoom = (room) => {\n  const options = {\n    method: 'post',\n    headers: authHeader(),\n    body: JSON.stringify(room)\n  };\n  return fetch(BASE_URL + ROOMS_ENDPOINT , options)\n    .then(res => res.json());\n};\n\nconst deleteRoom = (roomId) => {\n  const options = {\n    method: 'delete',\n    headers: authHeader()\n  };\n  return fetch(BASE_URL + ROOMS_ENDPOINT  + `/${roomId}`, options)\n    .then(res => res);\n};\n\n//class\nconst getClassList = () => {\n  const options = {\n    method: 'get',\n    headers: authHeader()\n  };\n  return fetch(BASE_URL + CLASSES_ENDPOINT, options)\n    .then(res => res.json());\n};\n\nconst editClass = (classId, c) => {\n  const options = {\n    method: 'put',\n    headers: authHeader(),\n    body: JSON.stringify(c)\n  };\n  return fetch(BASE_URL + CLASSES_ENDPOINT + `/${classId}`, options)\n    .then(res => res.json());\n};\n\nconst createNewClass = (c) => {\n  const options = {\n    method: 'post',\n    headers: authHeader(),\n    body: JSON.stringify(c)\n  };\n  return fetch(BASE_URL + CLASSES_ENDPOINT , options)\n    .then(res => res.json());\n};\n\nconst deleteClass = (classId) => {\n  const options = {\n    method: 'delete',\n    headers: authHeader()\n  };\n  return fetch(BASE_URL + CLASSES_ENDPOINT  + `/${classId}`, options)\n    .then(res => res);\n};\n\nconst getAllClassByUser = () => {\n  const options = {\n    method: 'get',\n    headers: authHeader()\n  };\n  return fetch(BASE_URL + CLASSES_ENDPOINT + 'byUser', options)\n    .then(res => res.json());\n};\n\nconst changeProfilePicture = (userId, file) => {\n  const authedHeader = authHeader();\n  const header = { \n    'Authorization': authedHeader['Authorization'],\n    // 'Accept': 'application/json',\n    // 'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  }\n  const options = {\n    method: 'post',\n    headers: header,\n    body: file\n  };\n  return fetch(BASE_URL + USERS_ENDPOINT + `/${userId}/uploadProfilePicture`, options)\n    .then(res => res);\n};\n\nexport default {\n  login, getUserInfo, logout,\n  getUserList, editUser, createNewUser, deleteUser, changeProfilePicture,\n  getRoomList, editRoom, createNewRoom, deleteRoom,\n  getClassList, editClass, createNewClass, deleteClass, getAllClassByUser\n};\n","/home/kikai/Documents/workspace/school-management/client/src/actions/auth.js",[],"/home/kikai/Documents/workspace/school-management/client/src/utils/authedHeader.js",[],"/home/kikai/Documents/workspace/school-management/client/src/reducers/userList.js",["166"],"import {\n  LOAD_USER_LIST,\n  LOAD_USER_LIST_SUCCESS,\n  LOAD_USER_LIST_FAIL,\n  HIDE_ALL_USER_MODAL,\n  OPEN_EDIT_USER_MODAL,\n  OPEN_CREATE_USER_MODAL,\n  EDIT_USER_FAIL,\n  CREATE_NEW_USER_FAIL\n\n} from '../utils/constants';\n\nexport default (state = Object.assign({}), action) => {\n  switch (action.type) {\n    case (LOAD_USER_LIST):\n      return Object.assign({}, state, {\n        message: null,\n        error: null\n      });\n    case (LOAD_USER_LIST_SUCCESS):\n      return Object.assign({}, state, {\n        message: null,\n        userList: action.data,\n        error: null\n      });\n    case (LOAD_USER_LIST_FAIL):\n      return Object.assign({}, state, {\n        message: null,\n        error: action.data\n      });\n    case (EDIT_USER_FAIL):\n      return Object.assign({}, state, {\n        message: null,\n        error: action.data\n      });\n    case (CREATE_NEW_USER_FAIL):\n      return Object.assign({}, state, {\n        message: null,\n        error: action.data\n      });\n    case (HIDE_ALL_USER_MODAL):\n      return Object.assign({}, state, {\n        message: null,\n        error: null,\n        showCreateUserModal: false,\n        showEditUserModal: false,\n      });\n    case (OPEN_EDIT_USER_MODAL):\n      return Object.assign({}, state, {\n        message: null,\n        error: null,\n        showCreateUserModal: false,\n        showEditUserModal: true,\n      });\n    case (OPEN_CREATE_USER_MODAL):\n      return Object.assign({}, state, {\n        message: null,\n        error: null,\n        showCreateUserModal: true,\n        showEditUserModal: false,\n      });\n    default:\n      return state;\n  }\n};\n","/home/kikai/Documents/workspace/school-management/client/src/components/UserListPage/UserListPage.jsx",["167"],"import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Grid, Col, Row, Modal, Button } from 'react-bootstrap';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport * as authActionCreator from '../../actionCreators/authActionCreator';\nimport * as userListActionCreator from '../../actionCreators/userListActionCreator';\n\nexport class UserListComponent extends Component {\n  componentWillMount() {\n    this.props.getUserInfo();\n    this.props.getUserList();\n  }\n\n  state = {\n    users: this.props.userList,\n    editingUser: null\n  }\n\n  createNewUser () {\n    this.props.openCreateUserModal();\n  }\n\n  editUser (user) {\n    this.setState({ editingUser: user });\n    this.props.openEditUserModal();\n  }\n\n  render() {\n    let users = this.props.userList;\n    return (\n      <Grid>\n        <Row>\n          <Col>\n            <NavigationBar />\n          </Col>\n        </Row>\n        <Row style={{margin: '0 50px'}}>\n          <h2 style={{ padding: '15px 0', margin: '10px 0 30px 0' }}>\n            Users\n            <span className=\"glyphicon glyphicon-plus pull-right\" style={{ margin: '5px', fontSize: '20px' }} onClick={() => {\n              this.createNewUser();\n            }}></span>\n          </h2>\n          {users && users.map(user =>\n            <div className=\"container-fluid well span6\" style={{ backgroundImage: 'linear-gradient(to bottom,#f9f9f9 0,#fff 100%)'}}>\n              <div className=\"row-fluid\">\n                <div className=\"col-xs-2\" >\n                  <img src={\"http://localhost:4000/avatar/\" + user.img} className=\"img-circle\" style={{ width: '140px', height: '140px' }}/>\n                </div>\n\n                <div className=\"col-xs-8\" style={{ paddingLeft: '30px' }}>\n                    <h3>{user.name}</h3>\n                    <h6><b>Username:</b> {user.username}</h6>\n                    <h6><b>Subject:</b> {user.subject}</h6>\n                    <h6><b>Email:</b> {user.email}</h6>\n                    <h6><b>Phone:</b> {user.phone}</h6>\n                </div>\n\n                <div className=\"col-xs-2\">\n                  <span className=\"glyphicon glyphicon-trash pull-right\" style={{ margin: '5px', color: 'blue' }} onClick={() => this.props.deleteUser(user._id)}></span>\n                  <span className=\"glyphicon glyphicon-edit pull-right\" style={{ margin: '5px', color: 'blue' }} onClick={() => this.editUser(user)}></span>\n                </div>\n              </div>\n            </div>\n          )}\n        </Row>\n        {this.props.showCreateUserModal &&\n          <UserModal\n            tittle=\"Create new user\"\n            onHide={() => this.props.hideAllUserModal()}\n            handleSubmit={(values) => {\n              this.props.createNewUser(values);\n            }}\n            isCreatingNew\n            error={this.props.error}\n          />\n        }\n        {this.props.showEditUserModal &&\n          <UserModal\n            tittle=\"Edit user\"\n            onHide={() => this.props.hideAllUserModal()}\n            handleSubmit={(values) => {\n              this.props.editUser(this.state.editingUser._id, values);\n            }}\n            user={this.state.editingUser}\n            error={this.props.error}\n          />\n        }\n      </Grid>\n    );\n  }\n}\n\nclass UserModal extends Component {\n  state = {\n    username: this.props.user?.username,\n    name: this.props.user?.name,\n    password: '',\n    subject: this.props.user?.subject,\n    email: this.props.user?.email,\n    phone: this.props.user?.phone,\n    img: this.props.user?.img,\n  }\n  render() {\n    const { onHide, handleSubmit, tittle, isCreatingNew} = this.props;\n\n    return <Modal show onHide={onHide} backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title>{tittle}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ minHeight: '120px' }}>\n        <form name=\"qryform\" id=\"qryform\" method=\"post\" action=\"mail.php\" onsubmit=\"return(validate());\" novalidate=\"novalidate\">\n          <div className=\"form-group\">\n            <label>Username:</label>\n            <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"Enter Username\" name=\"username\" value={this.state.username} onChange={(e) => this.setState({ username: e.target.value })}/>\n          </div>\n          <div className=\"form-group\">\n            <label>Name:</label>\n            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Enter Name\" name=\"name\" value={this.state.name} onChange={(e) => this.setState({ name: e.target.value })}/>\n          </div>\n          {isCreatingNew && \n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" name=\"password\" value={this.state.password} onChange={(e) => this.setState({ password: e.target.value })}/>\n            </div>\n          }\n          <div className=\"form-group\">\n            <label>Subject:</label>\n            <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Enter Subject\" name=\"subject\" value={this.state.subject} onChange={(e) => this.setState({ subject: e.target.value })}/>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email:</label>\n            <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email\" name=\"email\" value={this.state.email} onChange={(e) => this.setState({ email: e.target.value })}/>\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Phone No.:</label>\n            <input type=\"text\" className=\"form-control\" id=\"phone\" placeholder=\"Enter Phone no.\" name=\"phone\" value={this.state.phone} onChange={(e) => this.setState({ phone: e.target.value })}/>\n          </div>\n        </form>\n        {this.props.error && <div role=\"alert\" className=\"alert alert-danger\" style={{ marginTop: 0, marginBottom: '10px' }}>Error: {this.props.error}</div>}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button bsStyle=\"danger\" onClick={onHide}>cancel</Button>\n        <Button bsStyle=\"primary\" onClick={() => handleSubmit(this.state)}>\n          save\n        </Button>\n      </Modal.Footer>\n    </Modal>;\n  }\n}\n\nUserListComponent.propTypes = {\n  getUserInfo: PropTypes.func,\n  getUserList: PropTypes.func,\n  editUser: PropTypes.func,\n  createNewUser: PropTypes.func,\n  deleteUser: PropTypes.func,\n  history: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  userList: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  showEditUserModal: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  showCreateUserModal: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  hideAllUserModal: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  error: PropTypes.shape({\n    data: PropTypes.string\n  })\n};\n\nUserListComponent.defaultProps = {\n  getUserInfo: () => { },\n  getUserList: () => { },\n  editUser: () => { },\n  deleteUser: () => { },\n  createNewUser: () => { },\n  openEditUserModal: () => { },\n  openCreateUserModal: () => { },\n  hideAllUserModal: () => { },\n  history: null,\n  error: null,\n  userList: null,\n  showEditUserModal: null,\n  showCreateUserModal: null\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pageStatus: state.auth.pageStatus,\n    userList: state.userList.userList,\n    error: state.userList.error,\n    showEditUserModal: state.userList.showEditUserModal,\n    showCreateUserModal: state.userList.showCreateUserModal\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    getUserInfo: authActionCreator.getUserInfo,\n    getUserList: userListActionCreator.getUserList,\n    editUser: userListActionCreator.editUser,\n    deleteUser: userListActionCreator.deleteUser,\n    createNewUser: userListActionCreator.createNewUser,\n    openEditUserModal: userListActionCreator.openEditUserModal,\n    openCreateUserModal: userListActionCreator.openCreateUserModal,\n    hideAllUserModal: userListActionCreator.hideAllUserModal\n  }, dispatch);\n};\n\nconst UserList = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserListComponent));\n\nexport default UserList;\n\n","/home/kikai/Documents/workspace/school-management/client/src/components/ClassListPage/ClassListPage.jsx",["168","169"],"import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Grid, Col, Row, Modal, Button } from 'react-bootstrap';\nimport Select from 'react-select';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport * as authActionCreator from '../../actionCreators/authActionCreator';\nimport * as userListActionCreator from '../../actionCreators/userListActionCreator';\nimport * as roomListActionCreator from '../../actionCreators/roomListActionCreator';\nimport * as classListActionCreator from '../../actionCreators/classListActionCreator';\nvar moment = require('moment'); \n\nexport class ClassListComponent extends Component {\n  componentWillMount() {\n    this.props.getUserInfo();\n    this.props.getUserList();\n    this.props.getRoomList();\n    this.props.getClassList();\n  }\n\n  state = {\n    classes: this.props.classList,\n    editingClass: null\n  }\n\n  createNewClass () {\n    this.props.openCreateClassModal();\n  }\n\n  editClass (c) {\n    this.setState({ editingClass: c });\n    this.props.openEditClassModal();\n  }\n\n  render() {\n    let classes = this.props.classList;\n    let teachers = this.props.userList?.map(u => { return { value: u._id, label: u.name }});\n    let rooms = this.props.roomList?.map(r =>{ return { value: r._id, label: r.name }});\n    return (\n      <Grid>\n        <Row>\n          <Col>\n            <NavigationBar />\n          </Col>\n        </Row>\n        <Row style={{margin: '0 50px'}}>\n          <h2 style={{ padding: '15px 0', margin: '10px 0 30px 0' }}>\n            Classes\n            <span className=\"glyphicon glyphicon-plus pull-right\" style={{ margin: '5px', fontSize: '20px' }} onClick={() => {\n              this.createNewClass();\n            }}></span>\n          </h2>\n          {classes && classes.map(c =>\n            <div className=\"container-fluid well span6\" style={{ backgroundImage: 'linear-gradient(to bottom,#f9f9f9 0,#fff 100%)'}}>\n              <div className=\"row-fluid\">\n                <div className=\"col-xs-10\">\n                    <h3 style={{ marginTop: '5px', marginBottom: '15px' }}>{c.name}</h3>\n                    <h5><b>Teacher:</b> {c.teacher?.name}</h5>\n                    <h5><b>Room:</b> {c.room?.name}</h5>\n                    <h5><b>Start time:</b> {moment(c.startTime).format('MMMM Do YYYY, h:mm a')}</h5>\n                    <h5><b>End time:</b> {moment(c.endTime).format('MMMM Do YYYY, h:mm a')}</h5>\n                </div>\n\n                <div className=\"col-xs-2\">\n                  <span className=\"glyphicon glyphicon-trash pull-right\" style={{ margin: '5px', color: 'blue' }} onClick={() => this.props.deleteClass(c._id)}></span>\n                  <span className=\"glyphicon glyphicon-edit pull-right\" style={{ margin: '5px', color: 'blue' }} onClick={() => this.editClass(c)}></span>\n                </div>\n              </div>\n            </div>\n          )}\n        </Row>\n        {this.props.showCreateClassModal &&\n          <ClassModal\n            tittle=\"Create new class\"\n            onHide={() => this.props.hideAllClassModal()}\n            handleSubmit={(values) => {\n              this.props.createNewClass(values);\n            }}\n            teachers={teachers}\n            rooms={rooms}\n            error={this.props.error}\n          />\n        }\n        {this.props.showEditClassModal &&\n          <ClassModal\n            tittle=\"Edit class\"\n            onHide={() => this.props.hideAllClassModal()}\n            handleSubmit={(values) => {\n              this.props.editClass(this.state.editingClass._id, values);\n            }}\n            editingClass={this.state.editingClass}\n            teachers={teachers}\n            rooms={rooms}\n            error={this.props.error}\n          />\n        }\n      </Grid>\n    );\n  }\n}\n\nclass ClassModal extends Component {\n  state = {\n    name: this.props.editingClass?.name,\n    teacher: this.props.editingClass ? this.props.teachers.find(t => t.value === this.props.editingClass.teacher?._id) : null,\n    room: this.props.editingClass ? this.props.rooms.find(r => r.value === this.props.editingClass.room?._id) : null,\n    startTime: this.props.editingClass ? moment(this.props.editingClass.startTime).format('YYYY-MM-DDThh:mm') : null,\n    endTime: this.props.editingClass ? moment(this.props.editingClass.endTime).format('YYYY-MM-DDThh:mm') : null\n  }\n  render() {\n    const { onHide, handleSubmit, tittle, teachers, rooms } = this.props;\n\n    return <Modal show onHide={onHide} backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title>{tittle}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ minHeight: '120px' }}>\n        <form name=\"qryform\" id=\"qryform\" method=\"post\" action=\"mail.php\" onsubmit=\"return(validate());\" novalidate=\"novalidate\">\n          <div className=\"form-group\">\n            <label>Name:</label>\n            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Enter Name\" name=\"name\" value={this.state.name} onChange={(e) => this.setState({ name: e.target.value })}/>\n          </div>\n          <div className=\"form-group\">\n            <label>Teacher:</label>\n            <Select\n              value={this.state.teacher}\n              onChange={(opt) => this.setState({teacher: opt})}\n              options={teachers}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Room:</label>\n            <Select\n              value={this.state.room}\n              onChange={(opt) => this.setState({room: opt})}\n              options={rooms}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Start time:</label>\n            <input type=\"datetime-local\" value={this.state.startTime} id=\"startTime\" name=\"startTime\" style={{ display: 'block' }} onChange={(ev => this.setState({ startTime: ev.target.value }))}/>\n          </div>\n          <div className=\"form-group\">\n            <label>End time:</label>\n            <input type=\"datetime-local\" value={this.state.endTime} id=\"endTime\" name=\"endTime\" style={{ display: 'block' }} onChange={(ev => this.setState({ endTime: ev.target.value }))}/>\n          </div>\n        </form>\n        {this.props.error && <div role=\"alert\" className=\"alert alert-danger\" style={{ marginTop: 0, marginBottom: '10px' }}>Error: {this.props.error}</div>}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button bsStyle=\"danger\" onClick={onHide}>cancel</Button>\n        <Button bsStyle=\"primary\" onClick={() => handleSubmit({ name: this.state.name, teacher: this.state.teacher?.value, room: this.state.room?.value, startTime: moment(this.state.startTime).format(), endTime: moment(this.state.endTime).format()})}>\n          save\n        </Button>\n      </Modal.Footer>\n    </Modal>;\n  }\n}\n\nClassListComponent.propTypes = {\n  getUserInfo: PropTypes.func,\n  getClassList: PropTypes.func,\n  editClass: PropTypes.func,\n  createNewClass: PropTypes.func,\n  deleteClass: PropTypes.func,\n  hideAllClassModal: PropTypes.func,\n  openCreateClassModal: PropTypes.func,\n  openCreateClassModal: PropTypes.func,\n  history: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  classList: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  showEditClassModal: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  showEditClassModal: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  error: PropTypes.shape({\n    data: PropTypes.string\n  })\n};\n\nClassListComponent.defaultProps = {\n  getUserInfo: () => { },\n  getUserList: () => { },\n  getRoomList: () => { },\n  getClassList: () => { },\n  editClass: () => { },\n  deleteClass: () => { },\n  createNewClass: () => { },\n  hideAllClassModal: () => { },\n  openCreateClassModal: () => { },\n  openEditClassModal: () => { },\n  history: null,\n  userList: null,\n  roomList: null,\n  showEditClassModal: null,\n  showCreateClassModal: null,\n  error: null,\n  classList: null\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pageStatus: state.auth.pageStatus,\n    userList: state.userList.userList,\n    roomList: state.roomList.roomList,\n    classList: state.classList.classList,\n    error: state.classList.error,\n    showEditClassModal: state.classList.showEditClassModal,\n    showCreateClassModal: state.classList.showCreateClassModal,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    getUserInfo: authActionCreator.getUserInfo,\n    getUserList: userListActionCreator.getUserList,\n    getRoomList: roomListActionCreator.getRoomList,\n    getClassList: classListActionCreator.getClassList,\n    editClass: classListActionCreator.editClass,\n    deleteClass: classListActionCreator.deleteClass,\n    hideAllClassModal: classListActionCreator.hideAllClassModal,\n    openCreateClassModal: classListActionCreator.openCreateClassModal,\n    openEditClassModal: classListActionCreator.openEditClassModal,\n    createNewClass: classListActionCreator.createNewClass\n  }, dispatch);\n};\n\nconst ClassList = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ClassListComponent));\n\nexport default ClassList;\n\n","/home/kikai/Documents/workspace/school-management/client/src/components/RoomListPage/RoomListPage.jsx",["170"],"import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Grid, Col, Row, Modal, Button } from 'react-bootstrap';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport * as authActionCreator from '../../actionCreators/authActionCreator';\nimport * as roomListActionCreator from '../../actionCreators/roomListActionCreator';\n\nexport class RoomListComponent extends Component {\n  componentWillMount() {\n    this.props.getUserInfo();\n    this.props.getRoomList();\n  }\n\n  state = {\n    rooms: this.props.roomList,\n    editingRoom: null\n  }\n\n  createNewRoom () {\n    this.props.openCreateRoomModal();\n  }\n\n  editRoom (room) {\n    this.setState({ editingRoom: room });\n    this.props.openEditRoomModal();\n  }\n\n  render() {\n    let rooms = this.props.roomList;\n    return (\n      <Grid>\n        <Row>\n          <Col>\n            <NavigationBar />\n          </Col>\n        </Row>\n        <Row style={{margin: '0 50px'}}>\n          <h2 style={{ padding: '15px 0', margin: '10px 0 30px 0' }}>\n            Rooms\n            <span className=\"glyphicon glyphicon-plus pull-right\" style={{ margin: '5px', fontSize: '20px' }} onClick={() => {\n              this.createNewRoom();\n            }}></span>\n          </h2>\n          {rooms && rooms.map(room =>\n            <div className=\"container-fluid well span6\" style={{ backgroundImage: 'linear-gradient(to bottom,#f9f9f9 0,#fff 100%)'}}>\n            <div className=\"row-fluid\">\n              <div className=\"col-xs-10\">\n                  <h3 style={{ marginTop: '5px', marginBottom: '15px' }}>{room.name}</h3>\n                  <h5><b>Building:</b> {room.building}</h5>\n              </div>\n\n              <div className=\"col-xs-2\">\n                <span className=\"glyphicon glyphicon-trash pull-right\" style={{ margin: '5px', color: 'blue' }} onClick={() => this.props.deleteRoom(room._id)}></span>\n                <span className=\"glyphicon glyphicon-edit pull-right\" style={{ margin: '5px', color: 'blue' }} onClick={() => this.editRoom(room)}></span>\n              </div>\n            </div>\n          </div>\n          )}\n        </Row>\n        {this.props.showCreateRoomModal &&\n          <RoomModal\n            tittle=\"Create new room\"\n            onHide={() => this.props.hideAllRoomModal()}\n            handleSubmit={(values) => {\n              this.props.createNewRoom(values);\n            }}\n            error={this.props.error}\n          />\n        }\n        {this.props.showEditRoomModal &&\n          <RoomModal\n            tittle=\"Edit room\"\n            onHide={() => this.props.hideAllRoomModal()}\n            handleSubmit={(values) => {\n              this.props.editRoom(this.state.editingRoom._id, values);\n            }}\n            room={this.state.editingRoom}\n            error={this.props.error}\n          />\n        }\n      </Grid>\n    );\n  }\n}\n\nclass RoomModal extends Component {\n  state = {\n    name: this.props.room?.name,\n    building: this.props.room?.building\n  }\n  render() {\n    const { onHide, handleSubmit, tittle } = this.props;\n\n    return <Modal show onHide={onHide} backdrop=\"static\">\n      <Modal.Header closeButton>\n        <Modal.Title>{tittle}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ minHeight: '120px' }}>\n        <form name=\"qryform\" id=\"qryform\" method=\"post\" action=\"mail.php\" onsubmit=\"return(validate());\" novalidate=\"novalidate\">\n          <div className=\"form-group\">\n            <label>Name:</label>\n            <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Enter Name\" name=\"name\" value={this.state.name} onChange={(e) => this.setState({ name: e.target.value })}/>\n          </div>\n          <div className=\"form-group\">\n            <label>Building:</label>\n            <input type=\"text\" className=\"form-control\" id=\"building\" placeholder=\"Enter building\" name=\"building\" value={this.state.building} onChange={(e) => this.setState({ building: e.target.value })}/>\n          </div>\n        </form>\n        {this.props.error && <div role=\"alert\" className=\"alert alert-danger\" style={{ marginTop: 0, marginBottom: '10px' }}>Error: {this.props.error}</div>}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button bsStyle=\"danger\" onClick={onHide}>cancel</Button>\n        <Button bsStyle=\"primary\" onClick={() => handleSubmit(this.state)}>\n          save\n        </Button>\n      </Modal.Footer>\n    </Modal>;\n  }\n}\n\nRoomListComponent.propTypes = {\n  getUserInfo: PropTypes.func,\n  getRoomList: PropTypes.func,\n  editRoom: PropTypes.func,\n  createNewRoom: PropTypes.func,\n  deleteRoom: PropTypes.func,\n  hideAllRoomModal: PropTypes.func,\n  openCreateRoomModal: PropTypes.func,\n  openCreateRoomModal: PropTypes.func,\n  history: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  roomList: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  showEditRoomModal: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  showCreateRoomModal: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  error: PropTypes.shape({\n    data: PropTypes.string\n  })\n};\n\nRoomListComponent.defaultProps = {\n  getUserInfo: () => { },\n  getRoomList: () => { },\n  editRoom: () => { },\n  deleteRoom: () => { },\n  createNewRoom: () => { },\n  hideAllRoomModal: () => { },\n  openCreateRoomModal: () => { },\n  openEditRoomModal: () => { },\n  history: null,\n  roomList: null,\n  showEditRoomModal: null,\n  showCreateRoomModal: null,\n  error: null,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pageStatus: state.auth.pageStatus,\n    roomList: state.roomList.roomList,\n    error: state.roomList.error,\n    showEditRoomModal: state.roomList.showEditRoomModal,\n    showCreateRoomModal: state.roomList.showCreateRoomModal,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    getUserInfo: authActionCreator.getUserInfo,\n    getRoomList: roomListActionCreator.getRoomList,\n    editRoom: roomListActionCreator.editRoom,\n    deleteRoom: roomListActionCreator.deleteRoom,\n    createNewRoom: roomListActionCreator.createNewRoom,\n    hideAllRoomModal: roomListActionCreator.hideAllRoomModal,\n    openCreateRoomModal: roomListActionCreator.openCreateRoomModal,\n    openEditRoomModal: roomListActionCreator.openEditRoomModal,\n  }, dispatch);\n};\n\nconst RoomList = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RoomListComponent));\n\nexport default RoomList;\n\n","/home/kikai/Documents/workspace/school-management/client/src/components/UserDetailPage/UserDetailPage.jsx",["171"],"import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Grid, Col, Row, Button } from 'react-bootstrap';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport * as authActionCreator from '../../actionCreators/authActionCreator';\nimport * as userDetailActionCreator from '../../actionCreators/userDetailActionCreator';\nimport api from '../../utils/api';\n\nexport class UserDetailComponent extends Component {\n\n  state = {\n    name: null,\n    username: null,\n    email: null,\n    phone: null,\n    password: null,\n    img: null,\n  }\n\n  componentWillMount() {\n    this.props.getUserInfo();\n  }\n\n  render() {\n\n    let user = {\n      name: this.state.name !== null ? this.state.name : this.props.user?.name,\n      username: this.state.username !== null ? this.state.username : this.props.user?.username,\n      email: this.state.email !== null ? this.state.email : this.props.user?.email,\n      phone: this.state.phone !== null ? this.state.phone : this.props.user?.phone,\n      subject: this.state.subject !== null ? this.state.subject : this.props.user?.subject,\n      password: this.state.password !== null ? this.state.password : null,\n      img: this.state.img !== null ? this.state.img : this.props.user?.img,\n    }\n\n    return (\n      <Grid>\n        <Row>\n          <Col>\n            <NavigationBar />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div style={{ padding: '0 200px '}}>\n            <div className=\"preview text-center\">\n                <img className=\"preview-img\" src={`http://localhost:4000/avatar/${(this.state.img || this.props.user?.img || 'default.jpg')}?${new Date()}`} alt=\"Preview Image\" width=\"200\" height=\"200\"/>\n                <div className=\"browse-button\">\n                    <i className=\"glyphicon glyphicon-pencil\"></i>\n                    <input className=\"browse-input\" type=\"file\" name=\"UploadedFile\" id=\"UploadedFile\" onChange={async (ev) => {\n                      let formData = new FormData(); \n                      formData.append( \n                        \"avatar\", \n                        ev.target.files[0]\n                      ); \n                      this.setState({ imgChanged: true, img: this.state.img})\n                      api.changeProfilePicture(this.props.user._id, formData).then(() => this.props.getUserInfo());\n                    }}/>\n                </div>\n                <div className=\"error\" style={!this.props.error ? { visibility: 'hidden' } : {}}>Error: {this.props.error}</div>\n            </div>\n              <div className=\"form-group\">\n                <label>Username:</label>\n                <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"Enter Username\" name=\"username\" value={user.username} onChange={(e) => this.setState({ username: e.target.value })}/>\n              </div>\n              <div className=\"form-group\">\n                <label>Name:</label>\n                <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Enter Name\" name=\"name\" value={user.name} onChange={(e) => this.setState({ name: e.target.value })}/>\n              </div>\n              <div className=\"form-group\">\n                <label>Password:</label>\n                <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Enter Password\" name=\"password\" value={user.password} onChange={(e) => this.setState({ password: e.target.value })}/>\n              </div>\n              {!this.props.user?.isAdmin && <div className=\"form-group\">\n                <label>Subject:</label>\n                <input type=\"text\" className=\"form-control\" id=\"subject\" placeholder=\"Enter Subject\" name=\"subject\" value={user.subject} onChange={(e) => this.setState({ subject: e.target.value })}/>\n              </div>}\n\n              <div className=\"form-group\">\n                <label>Email:</label>\n                <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"Enter Email\" name=\"email\" value={user.email} onChange={(e) => this.setState({ email: e.target.value })}/>\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Phone No.:</label>\n                <input type=\"text\" className=\"form-control\" id=\"phone\" placeholder=\"Enter Phone no.\" name=\"phone\" value={user.phone} onChange={(e) => this.setState({ phone: e.target.value })}/>\n              </div>\n              <Button className=\"outline-primary pull-right btn-primary\" style={{ marginTop: '20px' }} onClick={()=> this.props.updateUserInfo(this.props.user._id, user)}>Save</Button>{' '}\n            </div>\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nUserDetailComponent.propTypes = {\n  getUserInfo: PropTypes.func,\n  updateUserInfo: PropTypes.func,\n  history: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  user: PropTypes.shape({\n    data: PropTypes.string\n  }),\n  error: PropTypes.shape({\n    data: PropTypes.string\n  })\n};\n\nUserDetailComponent.defaultProps = {\n  getUserInfo: () => { },\n  updateUserInfo: () => { },\n  history: null,\n  user: null,\n  error: null\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pageStatus: state.auth.pageStatus,\n    user: state.auth.user,\n    error: state.userDetail?.error\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    getUserInfo: authActionCreator.getUserInfo,\n    updateUserInfo: userDetailActionCreator.updateUserInfo,\n  }, dispatch);\n};\n\nconst UserDetail = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserDetailComponent));\n\nexport default UserDetail;\n\n","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/userListActionCreator.js",["172"],"import api from '../utils/api';\nimport * as userList from '../actions/userList';\n\nexport const getUserList = () => {\n  return (dispatch) => {\n    dispatch(userList.getUserList());\n    api.getUserList()\n      .then((response) => {\n        if (response.error) {\n          dispatch(userList.getUserListFailed(response.error));\n        } else {\n          dispatch(userList.getUserListSuccess(response));\n        }\n      });\n  };\n};\n\nexport const editUser = (userId, info) => {\n  return (dispatch) => {\n    api.editUser(userId, info)\n      .then((response) => {\n        if (response.error) {\n          dispatch(userList.editUserFailed(response.error));\n        } else {\n          dispatch(userList.hideAllUserModal());\n          getUserList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const createNewUser = (info) => {\n  return (dispatch) => {\n    api.createNewUser(info)\n      .then((response) => {\n        if (response.error) {\n          dispatch(userList.createNewUserFailed(response.error));\n        } else {\n          dispatch(userList.hideAllUserModal());\n          getUserList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const deleteUser = (userId) => {\n  return (dispatch) => {\n    api.deleteUser(userId)\n      .then((response) => {\n        if (response.error) {\n          dispatch(userList.deleteUserFailed(response.error));\n        } else {\n          getUserList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const openCreateUserModal = () => {\n  return (dispatch) => {\n    dispatch(userList.openCreateUserModal());\n  };\n};\n\nexport const openEditUserModal = () => {\n  return (dispatch) => {\n    dispatch(userList.openEditUserModal());\n  };\n};\n\nexport const hideAllUserModal = () => {\n  return (dispatch) => {\n    dispatch(userList.hideAllUserModal());\n  };\n};\n\nexport default { getUserList, editUser, createNewUser, deleteUser, openCreateUserModal, openEditUserModal, hideAllUserModal };","/home/kikai/Documents/workspace/school-management/client/src/actions/userList.js",[],"/home/kikai/Documents/workspace/school-management/client/src/actionCreators/roomListActionCreator.js",["173"],"import api from '../utils/api';\nimport * as roomList from '../actions/roomList';\n\nexport const getRoomList = () => {\n  return (dispatch) => {\n    dispatch(roomList.getRoomList());\n    api.getRoomList()\n      .then((response) => {\n        if (response.error) {\n          dispatch(roomList.getRoomListFailed(response.error));\n        } else {\n          dispatch(roomList.getRoomListSuccess(response));\n        }\n      });\n  };\n};\n\nexport const editRoom = (roomId, info) => {\n  return (dispatch) => {\n    api.editRoom(roomId, info)\n      .then((response) => {\n        if (response.error) {\n          dispatch(roomList.editRoomFailed(response.error));\n        } else {\n          dispatch(roomList.hideAllRoomModal());\n          getRoomList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const createNewRoom = (info) => {\n  return (dispatch) => {\n    api.createNewRoom(info)\n      .then((response) => {\n        if (response.error) {\n          dispatch(roomList.createNewRoomFailed(response.error));\n        } else {\n          dispatch(roomList.hideAllRoomModal());\n          getRoomList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const deleteRoom = (roomId) => {\n  return (dispatch) => {\n    api.deleteRoom(roomId)\n      .then((response) => {\n        if (response.error) {\n          dispatch(roomList.deleteRoomFailed(response.error));\n        } else {\n          getRoomList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const openCreateRoomModal = () => {\n  return (dispatch) => {\n    dispatch(roomList.openCreateRoomModal());\n  };\n};\n\nexport const openEditRoomModal = () => {\n  return (dispatch) => {\n    dispatch(roomList.openEditRoomModal());\n  };\n};\n\nexport const hideAllRoomModal = () => {\n  return (dispatch) => {\n    dispatch(roomList.hideAllRoomModal());\n  };\n};\n\nexport default { getRoomList, editRoom, createNewRoom, openCreateRoomModal, openEditRoomModal, hideAllRoomModal};","/home/kikai/Documents/workspace/school-management/client/src/actions/roomList.js",[],"/home/kikai/Documents/workspace/school-management/client/src/reducers/roomList.js",["174"],"import {\n  LOAD_ROOM_LIST,\n  LOAD_ROOM_LIST_SUCCESS,\n  LOAD_ROOM_LIST_FAIL,\n  HIDE_ALL_ROOM_MODAL,\n  CREATE_NEW_ROOM_FAIL,\n  EDIT_ROOM_FAIL,\n  OPEN_EDIT_ROOM_MODAL,\n  OPEN_CREATE_ROOM_MODAL\n} from '../utils/constants';\n\nexport default (state = Object.assign({}), action) => {\n  switch (action.type) {\n    case (LOAD_ROOM_LIST):\n      return Object.assign({}, state, {\n        message: null,\n        error: null\n      });\n    case (LOAD_ROOM_LIST_SUCCESS):\n      return Object.assign({}, state, {\n        message: null,\n        roomList: action.data,\n        error: null\n      });\n    case (LOAD_ROOM_LIST_FAIL):\n      return Object.assign({}, state, {\n        message: null,\n        error: action.data\n      });\n      case (EDIT_ROOM_FAIL):\n        return Object.assign({}, state, {\n          message: null,\n          error: action.data\n        });\n      case (CREATE_NEW_ROOM_FAIL):\n        return Object.assign({}, state, {\n          message: null,\n          error: action.data\n        });\n      case (HIDE_ALL_ROOM_MODAL):\n        return Object.assign({}, state, {\n          message: null,\n          error: null,\n          showCreateRoomModal: false,\n          showEditRoomModal: false,\n        });\n      case (OPEN_EDIT_ROOM_MODAL):\n        return Object.assign({}, state, {\n          message: null,\n          error: null,\n          showCreateRoomModal: false,\n          showEditRoomModal: true,\n        });\n      case (OPEN_CREATE_ROOM_MODAL):\n        return Object.assign({}, state, {\n          message: null,\n          error: null,\n          showCreateRoomModal: true,\n          showEditRoomModal: false,\n        });\n    default:\n      return state;\n  }\n};\n","/home/kikai/Documents/workspace/school-management/client/src/reducers/classList.js",["175"],"import {\n  LOAD_CLASS_LIST,\n  LOAD_CLASS_LIST_SUCCESS,\n  LOAD_CLASS_LIST_FAIL,\n  HIDE_ALL_CLASS_MODAL,\n  CREATE_NEW_CLASS_FAIL,\n  EDIT_CLASS_FAIL,\n  OPEN_EDIT_CLASS_MODAL,\n  OPEN_CREATE_CLASS_MODAL\n\n} from '../utils/constants';\n\nexport default (state = Object.assign({}), action) => {\n  switch (action.type) {\n    case (LOAD_CLASS_LIST):\n      return Object.assign({}, state, {\n        message: null,\n        error: null\n      });\n    case (LOAD_CLASS_LIST_SUCCESS):\n      return Object.assign({}, state, {\n        message: null,\n        classList: action.data,\n        error: null\n      });\n    case (LOAD_CLASS_LIST_FAIL):\n      return Object.assign({}, state, {\n        message: null,\n        error: action.data\n      });\n      case (EDIT_CLASS_FAIL):\n        return Object.assign({}, state, {\n          message: null,\n          error: action.data\n        });\n      case (CREATE_NEW_CLASS_FAIL):\n        return Object.assign({}, state, {\n          message: null,\n          error: action.data\n        });\n      case (HIDE_ALL_CLASS_MODAL):\n        return Object.assign({}, state, {\n          message: null,\n          error: null,\n          showCreateClassModal: false,\n          showEditClassModal: false,\n        });\n      case (OPEN_EDIT_CLASS_MODAL):\n        return Object.assign({}, state, {\n          message: null,\n          error: null,\n          showCreateClassModal: false,\n          showEditClassModal: true,\n        });\n      case (OPEN_CREATE_CLASS_MODAL):\n        return Object.assign({}, state, {\n          message: null,\n          error: null,\n          showCreateClassModal: true,\n          showEditClassModal: false,\n        });\n    default:\n      return state;\n  }\n};\n","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/classListActionCreator.js",["176"],"import api from '../utils/api';\nimport * as classList from '../actions/classList';\n\nexport const getClassList = () => {\n  return (dispatch) => {\n    dispatch(classList.getClassList());\n    api.getClassList()\n      .then((response) => {\n        if (response.error) {\n          dispatch(classList.getClassListFailed(response.error));\n        } else {\n          dispatch(classList.getClassListSuccess(response));\n        }\n      });\n  };\n};\n\nexport const editClass = (classId, info) => {\n  return (dispatch) => {\n    api.editClass(classId, info)\n      .then((response) => {\n        if (response.error) {\n          dispatch(classList.editClassFailed(response.error));\n        } else {\n          dispatch(classList.hideAllClassModal());\n          getClassList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const createNewClass = (info) => {\n  return (dispatch) => {\n    api.createNewClass(info)\n      .then((response) => {\n        if (response.error) {\n          dispatch(classList.createNewClassFailed(response.error));\n        } else {\n          dispatch(classList.hideAllClassModal());\n          getClassList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const deleteClass = (classId) => {\n  return (dispatch) => {\n    api.deleteClass(classId)\n      .then((response) => {\n        if (response.error) {\n          dispatch(classList.deleteClassFailed(response.error));\n        } else {\n          getClassList()(dispatch);\n        }\n      });\n  };\n};\n\nexport const openCreateClassModal = () => {\n  return (dispatch) => {\n    dispatch(classList.openCreateClassModal());\n  };\n};\n\nexport const openEditClassModal = () => {\n  return (dispatch) => {\n    dispatch(classList.openEditClassModal());\n  };\n};\n\nexport const hideAllClassModal = () => {\n  return (dispatch) => {\n    dispatch(classList.hideAllClassModal());\n  };\n};\n\nexport default { getClassList, editClass, createNewClass, openCreateClassModal, openEditClassModal, hideAllClassModal };","/home/kikai/Documents/workspace/school-management/client/src/actions/classList.js",[],"/home/kikai/Documents/workspace/school-management/client/src/components/TeacherClassListPage/TeacherClassListPage.jsx",["177","178","179","180"],"import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Grid, Col, Row, Modal, Button } from 'react-bootstrap';\nimport Select from 'react-select';\nimport NavigationBar from '../NavigationBar/NavigationBar';\nimport * as authActionCreator from '../../actionCreators/authActionCreator';\nimport * as teacherClassListActionCreator from '../../actionCreators/teacherClassListActionCreator';\nimport { editClassSuccess } from '../../actions/classList';\nvar moment = require('moment'); \n\nexport class TeacherClassListComponent extends Component {\n  componentWillMount() {\n    this.props.getUserInfo();\n    this.props.getAllClassByUser();\n  }\n\n\n  state = {\n    classes: this.props.classList\n  }\n\n\n  render() {\n    let classes = this.state.classes || this.props.classList;\n    return (\n      <Grid>\n        <Row>\n          <Col>\n            <NavigationBar />\n          </Col>\n        </Row>\n        <Row style={{margin: '0 50px'}}>\n          <h2 style={{ padding: '15px 0', margin: '10px 0 30px 0' }}>\n            Classes\n            <span className=\"pull-right\" style={{ margin: '5px', fontSize: '20px' }}>\n            <select style={{ height: '30px', borderColor: '#ccc', borderRadius: '5px', fontSize: '15px', backgroundColor: 'white' }} onChange={(ev) => {\n              const filter = ev.target.value;\n              let filterdClasses = this.props.classList;\n              if (filter === 'today') {\n                filterdClasses = this.props.classList.filter(c => moment().isSame(c.startTime, 'd'));\n              } else if (filter === 'past') {\n                filterdClasses = this.props.classList.filter(c => moment().isAfter(c.startTime, 'd'));\n              } else if (filter === 'future') {\n                filterdClasses = this.props.classList.filter(c => moment().isBefore(c.startTime, 'd'));\n              }\n              this.setState({ classes: filterdClasses })\n            }}>\n              <option selected value=\"all\">All</option>\n              <option value=\"today\">Today</option>\n              <option value=\"past\">Past</option>\n              <option value=\"future\">Future</option>\n            </select>\n            </span>\n          </h2>\n          {classes && classes.map(c =>\n            <div className=\"container-fluid well span6\" style={{ backgroundImage: 'linear-gradient(to bottom,#f9f9f9 0,#fff 100%)'}}>\n              <div className=\"row-fluid\">\n                <div className=\"col-xs-10\">\n                    <h3 style={{ marginTop: '5px', marginBottom: '15px' }}>{c.name}</h3>\n                    <h5><b>Room:</b> {c.room?.name}</h5>\n                    <h5><b>Start time:</b> {moment(c.startTime).format('MMMM Do YYYY, h:mm a')}</h5>\n                    <h5><b>End time:</b> {moment(c.endTime).format('MMMM Do YYYY, h:mm a')}</h5>\n                </div>\n              </div>\n            </div>\n          )}\n        </Row>\n      </Grid>\n    );\n  }\n}\n\nTeacherClassListComponent.propTypes = {\n  getUserInfo: PropTypes.func,\n  getAllClassByUser: PropTypes.func,\n  history: PropTypes.object, // eslint-disable-line react/forbid-prop-types\n  classList: PropTypes.shape({\n    data: PropTypes.string\n  })\n};\n\nTeacherClassListComponent.defaultProps = {\n  getUserInfo: () => { },\n  getAllClassByUser: () => { },\n  history: null,\n  classList: null,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pageStatus: state.auth.pageStatus,\n    classList: state.teacherClassList.teacherClassList\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    getUserInfo: authActionCreator.getUserInfo,\n    getAllClassByUser: teacherClassListActionCreator.getAllClassByUser,\n  }, dispatch);\n};\n\nconst ClassList = withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TeacherClassListComponent));\n\nexport default ClassList;\n\n","/home/kikai/Documents/workspace/school-management/client/src/actionCreators/teacherClassListActionCreator.js",["181"],"import api from '../utils/api';\nimport * as teacherClassList from '../actions/teacherClassList.js';\n\nexport const getAllClassByUser = () => {\n  return (dispatch) => {\n    dispatch(teacherClassList.getAllClassByUser());\n    api.getAllClassByUser()\n      .then((response) => {\n        if (response.error) {\n          dispatch(teacherClassList.getAllClassByUserFailed(response.error));\n        } else {\n          dispatch(teacherClassList.getAllClassByUserSuccess(response));\n        }\n      });\n  };\n};\n\nexport default { getAllClassByUser };","/home/kikai/Documents/workspace/school-management/client/src/reducers/teacherClassList.js",["182"],"import {\n  GET_ALL_CLASS_BY_USER,\n  GET_ALL_CLASS_BY_USER_SUCCESS,\n  GET_ALL_CLASS_BY_USER_FAIL\n} from '../utils/constants';\n\nexport default (state = Object.assign({}), action) => {\n  switch (action.type) {\n    case (GET_ALL_CLASS_BY_USER):\n      return Object.assign({}, state, {\n        message: null,\n        error: null\n      });\n    case (GET_ALL_CLASS_BY_USER_SUCCESS):\n      return Object.assign({}, state, {\n        message: null,\n        teacherClassList: action.data,\n        error: null\n      });\n    case (GET_ALL_CLASS_BY_USER_FAIL):\n      return Object.assign({}, state, {\n        message: null,\n        error: action.data\n      });\n    default:\n      return state;\n  }\n};\n","/home/kikai/Documents/workspace/school-management/client/src/actions/teacherClassList.js",[],"/home/kikai/Documents/workspace/school-management/client/src/actionCreators/userDetailActionCreator.js",["183"],"import api from '../utils/api';\nimport * as userDetail from '../actions/userDetail';\nimport * as authActionCreator from './authActionCreator';\nimport History from '../utils/history'\n\nexport const updateUserInfo = (userId, info) => {\n  return (dispatch) => {\n    dispatch(userDetail.updateUserInfo());\n    api.editUser(userId, info)\n      .then((response, err) => {\n        if (response.error) {\n          dispatch(userDetail.updateUserInfoFailed(response.error));\n        } else {\n          authActionCreator.getUserInfo()(dispatch);\n          History.push('/classes');\n        }\n      }).catch(err => { \n        dispatch(userDetail.updateUserInfoFailed(err.message))\n      } );\n  };\n};\n\nexport default { updateUserInfo };","/home/kikai/Documents/workspace/school-management/client/src/actions/userDetail.js",[],["184","185"],"/home/kikai/Documents/workspace/school-management/client/src/reducers/userDetail.js",["186","187"],"import {\n  UPDATE_USER_INFO,\n  UPDATE_USER_INFO_SUCCESS,\n  UPDATE_USER_INFO_FAIL\n} from '../utils/constants';\n\nexport default (state = Object.assign({}), action) => {\n  switch (action.type) {\n    case (UPDATE_USER_INFO):\n      return Object.assign({}, state, {\n        message: null,\n        error: null\n      });\n    case (UPDATE_USER_INFO_SUCCESS):\n      return Object.assign({}, state, {\n        message: null,\n        userDetail: { ... action.data, showEditUserModal: false, showCreateUserModal: false },\n        error: null\n      });\n    case (UPDATE_USER_INFO_FAIL):\n      return Object.assign({}, state, {\n        message: null,\n        error: action.data\n      });\n    default:\n      return state;\n  }\n};\n","/home/kikai/Documents/workspace/school-management/client/src/utils/history.js",[],{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":18,"column":1,"nodeType":"194","endLine":49,"endColumn":3},{"ruleId":"195","severity":1,"message":"196","line":4,"column":22,"nodeType":"197","messageId":"198","endLine":4,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":14,"column":1,"nodeType":"194","endLine":92,"endColumn":3},{"ruleId":"195","severity":1,"message":"199","line":3,"column":23,"nodeType":"197","messageId":"198","endLine":3,"endColumn":34},{"ruleId":"195","severity":1,"message":"200","line":3,"column":36,"nodeType":"197","messageId":"198","endLine":3,"endColumn":44},{"ruleId":"195","severity":1,"message":"201","line":1,"column":8,"nodeType":"197","messageId":"198","endLine":1,"endColumn":10},{"ruleId":"195","severity":1,"message":"202","line":2,"column":57,"nodeType":"197","messageId":"198","endLine":2,"endColumn":75},{"ruleId":"192","severity":1,"message":"203","line":179,"column":1,"nodeType":"194","endLine":184,"endColumn":3},{"ruleId":"192","severity":1,"message":"193","line":13,"column":1,"nodeType":"194","endLine":65,"endColumn":3},{"ruleId":"204","severity":1,"message":"205","line":51,"column":19,"nodeType":"206","endLine":51,"endColumn":141},{"ruleId":"207","severity":1,"message":"208","line":170,"column":3,"nodeType":"209","messageId":"210","endLine":170,"endColumn":23},{"ruleId":"207","severity":1,"message":"211","line":178,"column":3,"nodeType":"209","messageId":"210","endLine":178,"endColumn":21},{"ruleId":"207","severity":1,"message":"212","line":132,"column":3,"nodeType":"209","messageId":"210","endLine":132,"endColumn":22},{"ruleId":"213","severity":1,"message":"214","line":50,"column":17,"nodeType":"206","endLine":50,"endColumn":204},{"ruleId":"192","severity":1,"message":"203","line":77,"column":1,"nodeType":"194","endLine":77,"endColumn":127},{"ruleId":"192","severity":1,"message":"203","line":77,"column":1,"nodeType":"194","endLine":77,"endColumn":114},{"ruleId":"192","severity":1,"message":"193","line":12,"column":1,"nodeType":"194","endLine":64,"endColumn":3},{"ruleId":"192","severity":1,"message":"193","line":13,"column":1,"nodeType":"194","endLine":65,"endColumn":3},{"ruleId":"192","severity":1,"message":"203","line":77,"column":1,"nodeType":"194","endLine":77,"endColumn":121},{"ruleId":"195","severity":1,"message":"215","line":6,"column":26,"nodeType":"197","messageId":"198","endLine":6,"endColumn":31},{"ruleId":"195","severity":1,"message":"216","line":6,"column":33,"nodeType":"197","messageId":"198","endLine":6,"endColumn":39},{"ruleId":"195","severity":1,"message":"217","line":7,"column":8,"nodeType":"197","messageId":"198","endLine":7,"endColumn":14},{"ruleId":"195","severity":1,"message":"218","line":11,"column":10,"nodeType":"197","messageId":"198","endLine":11,"endColumn":26},{"ruleId":"192","severity":1,"message":"203","line":18,"column":1,"nodeType":"194","endLine":18,"endColumn":38},{"ruleId":"192","severity":1,"message":"193","line":7,"column":1,"nodeType":"194","endLine":28,"endColumn":3},{"ruleId":"192","severity":1,"message":"203","line":23,"column":1,"nodeType":"194","endLine":23,"endColumn":35},{"ruleId":"188","replacedBy":"219"},{"ruleId":"190","replacedBy":"220"},{"ruleId":"192","severity":1,"message":"193","line":7,"column":1,"nodeType":"194","endLine":28,"endColumn":3},{"ruleId":"221","severity":1,"message":"222","line":17,"column":26,"nodeType":"223","messageId":"224","endLine":17,"endColumn":27,"fix":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'MenuItem' is defined but never used.","'qs' is defined but never used.","'DASHBOARD_ENDPOINT' is defined but never used.","Assign object to a variable before exporting as module default","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-dupe-keys","Duplicate key 'openCreateClassModal'.","ObjectExpression","unexpected","Duplicate key 'showEditClassModal'.","Duplicate key 'openCreateRoomModal'.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Modal' is defined but never used.","'Button' is defined but never used.","'Select' is defined but never used.","'editClassSuccess' is defined but never used.",["226"],["227"],"rest-spread-spacing","Unexpected whitespace after spread property operator.","ExperimentalSpreadProperty","unexpectedWhitespace",{"range":"228","text":"229"},"no-global-assign","no-unsafe-negation",[439,440],""]